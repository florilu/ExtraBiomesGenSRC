package net.minecraft.src.generators;

import net.minecraft.src.*;

public class EBGLayerBiome extends GenLayer
{
    private BiomeGenBase[] allowedBiomes;
    private BiomeGenBase[] snowBiomes;
    private BiomeGenBase[] coldhills;
    private BiomeGenBase[] jungle;
    private BiomeGenBase[] ocean;
    private BiomeGenBase[] desert;

    public EBGLayerBiome(long var1, GenLayer var3, WorldType var4)
    {
        super(var1);
        this.allowedBiomes = new BiomeGenBase[] {BiomeGenBase.desert, BiomeGenBase.forest, BiomeGenBase.extremeHills, BiomeGenBase.swampland, BiomeGenBase.plains, BiomeGenBase.forest, BiomeGenBase.jungle};
        this.snowBiomes = new BiomeGenBase[] {BiomeGenBase.icePlains, BiomeGenBase.taiga};
        this.coldhills = new BiomeGenBase[] {BiomeGenBase.ColdHills, BiomeGenBase.ColdForest1, BiomeGenBase.ColdHills, BiomeGenBase.ColdForest2, BiomeGenBase.ColdForest3};
        this.desert = new BiomeGenBase[] {BiomeGenBase.DesertFlat, BiomeGenBase.DesertLakes, BiomeGenBase.DesertFlat, BiomeGenBase.DesertOasis, BiomeGenBase.DesertFlat, BiomeGenBase.DesertHill, BiomeGenBase.DesertOasis, BiomeGenBase.DesertHill};
        this.jungle = new BiomeGenBase[] {BiomeGenBase.taiga};
        this.ocean = new BiomeGenBase[] {BiomeGenBase.taiga};
        this.parent = var3;
    }

    /**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
    public int[] getInts(int var1, int var2, int var3, int var4)
    {
        int[] var5 = this.parent.getInts(var1, var2, var3, var4);
        int[] var6 = IntCache.getIntCache(var3 * var4);

        for (int var7 = 0; var7 < var4; ++var7)
        {
            for (int var8 = 0; var8 < var3; ++var8)
            {
                this.initChunkSeed((long)(var8 + var1), (long)(var7 + var2));
                int var9 = var5[var8 + var7 * var3];

                if (var9 == 0)
                {
                    var6[var8 + var7 * var3] = 0;
                }
                else if (var9 == BiomeGenBase.mushroomIsland.biomeID)
                {
                    var6[var8 + var7 * var3] = var9;
                }
                else if (var9 == BiomeGenBase.GOLDtropocean2.biomeID)
                {
                    var6[var8 + var7 * var3] = var9;
                }
                else if (var9 == 1)
                {
                    var6[var8 + var7 * var3] = this.allowedBiomes[this.nextInt(this.allowedBiomes.length)].biomeID;
                }
                else if (var9 == 100)
                {
                    var6[var8 + var7 * var3] = this.coldhills[this.nextInt(this.coldhills.length)].biomeID;
                }
                else if (var9 == 101)
                {
                    var6[var8 + var7 * var3] = this.desert[this.nextInt(this.desert.length)].biomeID;
                }
                else if (var9 == 102)
                {
                    var6[var8 + var7 * var3] = this.jungle[this.nextInt(this.jungle.length)].biomeID;
                }
                else if (var9 == 103)
                {
                    var6[var8 + var7 * var3] = this.ocean[this.nextInt(this.ocean.length)].biomeID;
                }
                else
                {
                    var6[var8 + var7 * var3] = this.snowBiomes[this.nextInt(this.snowBiomes.length)].biomeID;
                }
            }
        }

        return var6;
    }
}
